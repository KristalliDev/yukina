---
import YukinaConfig from "../../yukina.config";
import { GetCoverURLForUnspecifiedEntry } from "../utils/cover";

export interface Props {
  title?: string;
  subTitle?: string;
  bannerImage?: string;
  slug?: string;
}
const { title, subTitle, bannerImage, slug } = Astro.props;

const hasTitle = title !== undefined || subTitle !== undefined;
const hasHeaderImg = bannerImage !== undefined || slug !== undefined;

let carouselImgsList = YukinaConfig.banners;
const carouselAnimationTime = `${carouselImgsList.length * 6}s`;
---

<div id="banner" class="banner onload-animation-fade-in">
  <div class="transition-main banner-inner h-full w-full">
    <!-- {
      !hasHeaderImg && (
        <div class="carousel">
          <ul id="carousel_imgs">
            {carouselImgsList.map((img, index) => (
              <li
                class="item lozad"
                style={{ animationDelay: `${index * 6}s` }}
                data-background-image={img}
              />
            ))}
          </ul>
        </div>
      )
    } -->
    <!-- {
      hasHeaderImg && (
        <div class="cover">
          <img
            class="item lozad"
            data-src={bannerImage ?? GetCoverURLForUnspecifiedEntry(slug ?? "")}
            alt="PostCoverr"
          />
        </div>
      )
    } -->
    <div class="relative h-[95%] w-full">
      <div
        class="absolute left-1/2 top-1/2 w-4/5 -translate-x-1/2 -translate-y-1/2 lg:w-3/4"
      >
        <div class="flex flex-col">
          <h1
            class:list={[hasTitle ? "title-normal" : "title-index"]}
            class="title"
          >
            {title ?? YukinaConfig.title}
          </h1>
          <h2 class="subtitle">{subTitle ?? YukinaConfig.subTitle}</h2>
        </div>
      </div>
    </div>
  </div>

<script>
  const styleElement = document.createElement("style");
  const carouselImgs = document.getElementById("carousel_imgs");
  const carouselImgsCount = carouselImgs?.children.length ?? 0;

  const carouselAnimation = `
  @keyframes carousel-animation {
    0% {
      opacity: 0;
      transform: scale(1);
    }
    3% {
      opacity: 1;
    }
    8% {
      opacity: 1;
      animation-timing-function: ease-out;
    }
    ${100 / carouselImgsCount}% {
      opacity: 1;
    }
    ${100 / carouselImgsCount + 50 / carouselImgsCount}% {
      opacity: 0;
      animation-timing-function: ease-out;
    }
    100% {
      opacity: 0;
      transform: scale(2);
    }
  }
  `;
  styleElement.textContent = carouselAnimation;
  let bannerElement = document.getElementById("banner");
  if (bannerElement && !bannerElement.querySelector("style"))
    bannerElement.appendChild(styleElement);
</script>

<style define:vars={{ carouselAnimationTime }}>
  .banner {
    @apply relative h-[calc(var(--banner-height)*3/4)] opacity-100 lg:h-[var(--banner-height)];
  }

  .carousel {
    @apply absolute left-0 top-0 -z-10 block h-[calc(var(--banner-height)*3/4)] w-full overflow-hidden bg-white lg:h-[var(--banner-height)];
    animation-fill-mode: forwards;
  }

  .carousel::before {
    @apply absolute left-0 top-0 z-10 block h-full w-full bg-black/25 transition-all content-[''];
    @apply dark:bg-black/30;
  }

  .carousel .item {
    @apply absolute left-0 top-0 z-0 h-full w-full origin-center bg-cover bg-center bg-no-repeat opacity-0;
    animation: carousel-animation var(--carouselAnimationTime) linear infinite
      0s;
    backface-visibility: hidden;
    transform-style: preserve-3d;
  }

  .cover {
    @apply absolute left-0 top-0 z-0 block h-[var(--banner-height)] w-full overflow-hidden bg-white;
  }

  .cover::before {
    @apply absolute left-0 top-0 z-10 block h-full w-full bg-black/25 transition-all content-[''];
    @apply dark:bg-black/30;
  }

  .cover .item {
    @apply h-full w-full object-cover;
  }

  .title {
    @apply mt-8 text-center font-bold text-[var(--title-color)] drop-shadow-lg lg:mt-1;
    font-family: var(--title-font);
  }

  .title-index {
    @apply mb-0 text-6xl leading-[5rem] lg:mb-1 lg:text-8xl;
  }

  .title-normal {
    @apply mb-1 text-3xl lg:text-5xl;
  }

  .subtitle {
    @apply text-center text-xl text-[var(--subtitle-color)] drop-shadow-md lg:text-3xl;
    font-family: var(--subtitle-font);
  }
</style>
